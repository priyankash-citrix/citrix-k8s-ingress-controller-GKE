apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-cic-k8s-ingress-controller
  labels:
    app: cic-k8s-ingress-controller
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec: 
      serviceAccountName: {{ .Values.serviceAccount }}
      containers:
      - name: cic-k8s-ingress-controller
        image: "{{ .Values.cic.image }}"
        imagePullPolicy: "{{ .Values.cic.pullPolicy }}"
        args:
{{- if .Values.ingressClass }}
          - --ingress-class
            {{ .Values.ingressClass }}
{{- end }}
          - --feature-node-watch
            {{.Values.nodeWatch}}
        env:
          # Set NetScaler NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled) 
          - name: "NS_IP"
            value: "{{ .Values.nsIP }}"
          # Set username for Nitro
          - name: "NS_USER"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default (printf "%s-nslogin" (.Release.Name)) }}
                key: username
          # Set user password for Nitro
          - name: "NS_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default (printf "%s-nslogin" (.Release.Name)) }}
                key: password
          - name: "EULA"
            value: "{{ .Values.license.accept }}"
          - name: "LOGLEVEL"
            value: "{{ .Values.logLevel}}"
          - name: "NS_PROTOCOL"
            value: "{{ .Values.nsProtocol }}"
          - name: "NS_PORT"
            value: "{{ .Values.nsPort}}"
          - name: "NS_VIP"
            value: "{{ .Values.nsVIP }}"
{{- if .Values.exporter.required }}
      - name: exporter
        image: "{{ .Values.exporter.image }}"
        args:
          - "--secure=YES"
          - "--username=$(NS_USERNAME)"
          - "--password=$(NS_PASSWORD)"
          - "--target-nsip={{ .Values.nsIP }}"
          - "--port={{ .Values.exporter.ports.containerPort }}"
        env:
          - name: NS_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default (printf "%s-nslogin" (.Release.Name)) }}
                key: username
          - name: NS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.loginFileName | default (printf "%s-nslogin" (.Release.Name)) }}
                key: password
        imagePullPolicy: {{ .Values.exporter.pullPolicy }}
{{- end }}

---

{{- if .Values.exporter.required }}


apiVersion: v1
kind: Service
metadata:
   name: {{ .Release.Name }}-exporter
   labels:
     app: exporter
     service-type: citrix-adc-monitor
     app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
   type: ClusterIP
   ports:
   - port: {{ .Values.exporter.ports.containerPort }}
     targetPort: {{ .Values.exporter.ports.containerPort }}
     name: exporter-port
   selector:
     app: cic-k8s-ingress-controller

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
 name: {{ .Release.Name }}-citrix-adc-servicemonitor
 labels:
   servicemonitor: citrix-adc
   app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
 endpoints:
 - interval: 30s
   port: exporter-port
 selector:
   matchLabels:
     service-type: citrix-adc-monitor
 namespaceSelector:
   matchNames:
   - monitoring
   - default
   - {{ .Release.Namespace }}

{{- end }}
